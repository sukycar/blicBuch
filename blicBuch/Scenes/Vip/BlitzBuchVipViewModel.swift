//
//  BlitzBuchVipViewModel.swift
//  blitzBuch
//
//  Created by Vladimir Sukanica on 17.7.21..
//  Copyright (c) 2021 Vladimir Sukanica. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import CoreData

protocol BlitzBuchVipViewModelProtocol {
    var vipBooks : Dynamic<[Book]> { get set }
    
    func getVipBooks()
}

class BlitzBuchVipViewModel: BaseViewModel, BlitzBuchVipViewModelProtocol {
    
    // MARK: - BlitzBuchVipViewModelProtocol Vars & Lets
    
    var vipBooks: Dynamic<[Book]>
    
    // MARK: - Init
    
    override init() {
        self.vipBooks = Dynamic([])
        super.init()
    }
    
    func getVipBooks(){
        let fetchRequest = Book.fetchRequest() as NSFetchRequest
        let predicate = NSPredicate(format: "vip == true")
        fetchRequest.predicate = predicate
        do {
            self.vipBooks.value = try DataManager.shared.context.fetch(fetchRequest)
        } catch let error as NSError {
            print(error.localizedDescription)
        }
    }
}
