//
//  BlitzBuchInfoViewController.swift
//  blitzBuch
//
//  Created by Vladimir Sukanica on 17.7.21..
//  Copyright (c) 2021 Vladimir Sukanica. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol BlitzBuchInfoViewControllerProtocol: AnyObject {
    
}

class BlitzBuchInfoViewController: BaseViewController, BlitzBuchInfoViewControllerProtocol {
    
    // MARK: - Vars & Lets
    
    private var customView: BlitzBuchInfoView! {
        loadViewIfNeeded()
        return view as? BlitzBuchInfoView
    }
    var viewModel: (BaseViewModel & BlitzBuchInfoViewModelProtocol)?
    
    // MARK: - Controller lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        if let viewModel = self.viewModel {
            self.customView.setup(model: viewModel)
        }
        self.bindViewModel()
    }
    
    // MARK: - Private methods
    
    private func bindViewModel() {
        self.viewModel?.error.bind( {[weak self] in
            if let error = $0 {
                self?.handleError(error: error)
            }
        })
        self.viewModel?.isLoaderHidden.bind({ [weak self] in
            self?.shouldHideLoader(isHidden: $0)
        })
    }
    
}
