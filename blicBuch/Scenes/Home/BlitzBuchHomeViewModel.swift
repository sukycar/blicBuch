//
//  BlitzBuchHomeViewModel.swift
//  blitzBuch
//
//  Created by Vladimir Sukanica on 17.7.21..
//  Copyright (c) 2021 Vladimir Sukanica. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import CoreData

protocol BlitzBuchHomeViewModelProtocol {
    var homeBooks: Dynamic<[Book]> { get set }
    var userDefaults: BlitzBuchUserDefaults { get set }
    
    func fetchLatestBooks()
}

class BlitzBuchHomeViewModel: BaseViewModel, BlitzBuchHomeViewModelProtocol {
    
    // MARK: - BlitzBuchHomeViewModelProtocol Vars & Lets

    var homeBooks : Dynamic<[Book]>
    var userDefaults: BlitzBuchUserDefaults

    // MARK: - Vars & Lets

    var context = DataManager.shared.context
    
    // MARK: - Init
    
    override init() {
        self.userDefaults = BlitzBuchUserDefaults(userDefaults: UserDefaults.standard)
        self.homeBooks = Dynamic([])
        super.init()
    }
    
    // MARK: - BlitzBuchHomeViewModelProtocol Methods

    func fetchLatestBooks(){
        let fetchRequest = Book.fetchRequest() as NSFetchRequest
        fetchRequest.sortDescriptors = [NSSortDescriptor(key: "id", ascending: false)]
        fetchRequest.fetchLimit = 5
        do {
            self.homeBooks.value = try context?.fetch(fetchRequest) as! [Book]
        } catch {
            print(error.localizedDescription)
        }
    }
}
