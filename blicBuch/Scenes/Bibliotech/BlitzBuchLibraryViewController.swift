//
//  BlitzBuchLibraryViewController.swift
//  blitzBuch
//
//  Created by Vladimir Sukanica on 17.7.21..
//  Copyright (c) 2021 Vladimir Sukanica. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol BlitzBuchLibraryViewControllerProtocol: AnyObject {
    
}

class BlitzBuchLibraryViewController: BaseViewController, BlitzBuchLibraryViewControllerProtocol {
    
    // MARK: - Vars & Lets
    
    private var customView: BlitzBuchLibraryView! {
        loadViewIfNeeded()
        return view as? BlitzBuchLibraryView
    }
    var viewModel: (BaseViewModel & BlitzBuchLibraryViewModelProtocol)?
    
    // MARK: - Controller lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        self.customView.setup(target: self,
                              tableViewDelegate: self,
                              tableViewDataSource: self)
        if let viewModel = self.viewModel {
            print(viewModel.dataSource.value)
            self.customView.genreTable.reloadData()
        }
        self.bindViewModel()
    }
    
    // MARK: - Private methods
    
    private func bindViewModel() {
        self.viewModel?.error.bind( {[weak self] in
            if let error = $0 {
                self?.handleError(error: error)
            }
        })
        self.viewModel?.isLoaderHidden.bind({ [weak self] in
            self?.shouldHideLoader(isHidden: $0)
        })
    }
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if segue.identifier == "bibliotech" {
            let newController = segue.destination as! UINavigationController
            let genreVC = newController.topViewController as! BlitzBuchGenreViewController
            if let viewModel = self.viewModel {
                genreVC.viewModel = BlitzBuchGenreViewModel(genre: viewModel.genre)
            }
        }
    }
    
}

// MARK: - UITableViewDataSource, UITableViewDelegate

extension BlitzBuchLibraryViewController: UITableViewDataSource, UITableViewDelegate {
    func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {
        let view = UIView()
        return view
    }
    
    func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {
        return 10
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return self.viewModel?.dataSource.value.count ?? 0
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        if let model = self.viewModel?.dataSource.value[indexPath.row] {
            let cell = tableView.dequeueReusableCell(withIdentifier: String(describing:CategoryTableViewCell.self), for:indexPath) as! CategoryTableViewCell
            cell.set(with: model)
            return cell
        }
        return UITableViewCell()
    }
    
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        
        let model = self.viewModel?.dataSource.value[indexPath.row]
        switch model {
        case "Adventure".localized():
            self.viewModel?.genre = .avantura
        case "Biography".localized():
            self.viewModel?.genre = .biografija
        case "Detective novels / crime novels".localized():
            self.viewModel?.genre = .detektivski
        case "The epic fantasy".localized():
            self.viewModel?.genre = .epski
        case "Erotic novels / romance novels".localized():
            self.viewModel?.genre = .erotski
        case "Classical Literature".localized():
            self.viewModel?.genre = .klasika
        case "Popular Psychology".localized():
            self.viewModel?.genre = .psihologija
        case "Thriller".localized():
            self.viewModel?.genre = .triler
        case "Historical novels".localized():
            self.viewModel?.genre = .istorijski
        case "Miscellaneous".localized():
            self.viewModel?.genre = .ostalo
        case "Horror".localized():
            self.viewModel?.genre = .horor
        case "Action".localized():
            self.viewModel?.genre = .akcija
        case "Novel".localized():
            self.viewModel?.genre = .roman
        default:
            print("Select row")
        }
        
        DispatchQueue.main.asyncAfter(deadline: .now() + 0.15) {
            let transition = CATransition()
            transition.duration = 0.7
            transition.type = CATransitionType.push
            transition.subtype = CATransitionSubtype.fromRight
            transition.timingFunction = CAMediaTimingFunction(name:CAMediaTimingFunctionName.easeInEaseOut)
            self.view.window!.layer.add(transition, forKey: kCATransition)
            self.performSegue(withIdentifier: "bibliotech", sender: self)
        }
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 30
    }
}
